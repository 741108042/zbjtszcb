{% extends '::base.html.twig' %}
{% block stylesheets %}        
        <link rel="stylesheet" href="{{ asset('bundles/ace/css/dropzone.css') }}" />
{% endblock %}

{% block body -%}
<div id="main-container" class="main-container">
 <div class="main-content">
    <div class="breadcrumbs">
             <ul class="breadcrumb">
                        <li>
                            <i class="ace-icon fa fa-home home-icon"></i>
                            <a href="#">直播动态</a>
                        </li> </ul>

        <!-- breadcrumbs goes here -->
    </div>
    <div class="page-content"> 
        <!-- setting box goes here if needed -->
        <div class="row">
            <div class="col-xs-6">
{% form_theme edit_form 'AppBundle:Movie:fields.html.twig' %}
{{ form_start(edit_form, {'attr':{'class': 'form-horizontal'}}) }}
{{ form_widget(edit_form) }}
{{ form_end(edit_form) }}
 </div>
 <!-- setting box goes here if needed -->
 	            <div class="col-xs-6">
	            	<!-- PAGE CONTENT BEGINS -->
								<div>
									<form action="{{path('image_upload',{'thumbnail':{'width':200,'height':0}})}}" class="dropzone ace-thumbnails clearfix" id="dropzone">
										<div class="fallback">
											<input name="file" type="file" multiple="" />
										</div>
									</form>
								</div>
					<!-- PAGE CONTENT ENDS -->
	            </div>
        </div>
    </div>
</div>
</div>
        <ul class="record_actions">
    <li>
        <a href="{{ path('topic_subject',{'topic_id':edit_form.vars.value.topicId}) }}">
            Back to the list
        </a>
    </li>
    <li>{{ form(delete_form) }}</li>
</ul>
{% endblock %}

{% block javascripts %}

		<script src="{{ asset('bundles/ace/js/dropzone.js') }}"></script>

		<!-- inline scripts related to this page -->
		<script type="text/javascript">
			jQuery(function($){
			
			try {
			  Dropzone.autoDiscover = false;
			  var myDropzone = new Dropzone("#dropzone" , {
			    paramName: "file", // The name that will be used to transfer the file
			    maxFilesize: 0.5, // MB
			
				addRemoveLinks : true,
				dictDefaultMessage :'把要上传的内容拖拽到这里',
				dictResponseError: 'Error while uploading file!',
				
				//change the previewTemplate to use Bootstrap progress bars
				/*previewTemplate: "<div class=\"dz-preview dz-file-preview\">\n  <div class=\"dz-details\">\n    <div class=\"dz-filename\"><span data-dz-name></span></div>\n    <div class=\"dz-size\" data-dz-size></div>\n    <img data-dz-thumbnail />\n  </div>\n  <div class=\"progress progress-small progress-striped active\"><div class=\"progress-bar progress-bar-success\" data-dz-uploadprogress></div></div>\n  <div class=\"dz-success-mark\"><span></span></div>\n  <div class=\"dz-error-mark\"><span></span></div>\n  <div class=\"dz-error-message\"><span data-dz-errormessage></span></div>\n</div>",
				*/
			    init: function() {
		            this.on("success", function(file,result) {
		            	file.id=result;
		            	var ids=$("#appbundle_subject_picids").val();
		            	if(ids==''){
		            		$("#appbundle_subject_picids").val(file.id);
		            	}else{
		            		$("#appbundle_subject_picids").val(ids+","+file.id);
		            	}
		            	//console.log(file);
		                //console.log("File " + file.name + "uploaded");
		            });
		            this.on("removedfile", function(file) {
		            	//console.log(file);
		            	$.post('{{ path("image_remove")}}?id='+file.id,{},function(){})
		                console.log("File " + file.name + "removed");
		            });

		        }
			  });
		 {% for entity in img_entities %}
			  
			   var mockFile = { name: "{{ entity.title }}", size: {{ entity.size }},id:"{{entity.id}}" };

				// Call the default addedfile event handler
				myDropzone.emit("addedfile", mockFile);

				// And optionally show the thumbnail of the file:
				myDropzone.emit("thumbnail", mockFile, "{{entity.image}}");
				// Or if the file on your server is not yet in the right
				// size, you can let Dropzone download and resize it
				// callback and crossOrigin are optional.
				//myDropzone.createThumbnailFromUrl(file, imageUrl, callback, crossOrigin);

				// Make sure that there is no progress bar, etc...
				myDropzone.emit("complete", mockFile);
 
				//var existingFileCount = 1; 
				//myDropzone.options.maxFiles = myDropzone.options.maxFiles - existingFileCount;
				{% endfor %}
			
			} catch(e) {console.log(e);
			  alert('去更新个支持h5的浏览器吧。');
			}
			
			});
		</script>  
		{% endblock %}
